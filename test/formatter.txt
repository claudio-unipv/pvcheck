>>> from formatter import *
>>> from testdata import Section

>>> f = TextFormatter(maxerrors=4)
>>> f.begin_session()
>>> f.begin_test("description", ["a b c"], "1\n2\n3\n", "x\ny\n")
TEST: description
COMMAND LINE: a b c
INPUT:
1
2
3
TEMPORARY FILE:
x
y
>>> f.set_verbosity(TextFormatter.ERROR)
>>> f.begin_test("description", ["a b c"], "1\n2\n3\n", "x\ny\n")
>>> f.set_verbosity(TextFormatter.DEBUG)
>>> f.execution_result(["prog"],
...   executor.ExecResult(executor.ER_OK, 0, "a\n  b\nc"))
OUTPUT:
> a
>   b
> c
>>> f.execution_result(["prog"],
...   executor.ExecResult(executor.ER_SEGFAULT, -1, ""))
PROCESS ENDED WITH A FAILURE (SEGMENTATION FAULT)
>>> f.execution_result(["prog"],
...   executor.ExecResult(executor.ER_TIMEOUT, 0, ""))
TIMEOUT EXPIRED: PROCESS TERMINATED
>>> f.execution_result(["prog"],
...   executor.ExecResult(executor.ER_ERROR, 42, ""))
PROCESS ENDED WITH A FAILURE (ERROR CODE 42)
>>> f.execution_result(["prog"],
...   executor.ExecResult(executor.ER_NOTFILE, 1, ""))
FAILED TO RUN THE FILE 'prog' (the file does not exist)
>>> f.missing_section(Section("NOTEXISTING", []))
NOTEXISTING: missing section
>>> f.set_verbosity(TextFormatter.ERROR)
>>> f.missing_section(Section("NOTEXISTING", []))
>>> f.set_verbosity(TextFormatter.INFO)
>>> f.comparison_result(
...      Section("EXPECTED", ["1", "2"]),
...      Section("GOT", ["3", "2", "4"]),
...      [1, 0, 1], ["1", "2", None])
EXPECTED: wrong number of lines (expected 2, got 3)
EXPECTED: line 1 is wrong  (expected '1', got '3')
EXPECTED: unexpected line '4'
>>> f.comparison_result(
...      Section("EXPECTED", ["1", "2", "3", "4", "5", "6"]),
...      Section("GOT", ["6", "1", "2", "3", "4", "5"]),
...      [1] * 6, ["1", "2", "3", "4", "5", "6"])
EXPECTED: line 1 is wrong  (expected '1', got '6')
EXPECTED: line 2 is wrong  (expected '2', got '1')
EXPECTED: line 3 is wrong  (expected '3', got '2')
(... plus other 3 errors ...)
>>> f.comparison_result(
...      Section("EXPECTED", ["1", "2"]),
...      Section("GOT", []),
...      [1, 1], ["1", "2"])
EXPECTED: wrong number of lines (expected 2, got 0)
EXPECTED: missing line (expected '1')
EXPECTED: missing line (expected '2')
>>> f.comparison_result(
...      Section("EXPECTED", ["1", "2"]),
...      Section("GOT", ["2", "3"]),
...      [0, 1, 1], ["2", None, "1"])
EXPECTED: unexpected line '3'
EXPECTED: missing line (expected '1')
